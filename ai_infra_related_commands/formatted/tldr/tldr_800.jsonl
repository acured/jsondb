{"command": "geth", "description": "The go-ethereum command-line interface."}
{"command": "gfortran", "description": "Preprocess and compile Fortran source files, then assemble and link them together."}
{"command": "gh alias", "description": "Manage GitHub CLI command aliases."}
{"command": "gh api", "description": "Makes authenticated HTTP requests to the GitHub API and prints the response."}
{"command": "gh auth", "description": "Authenticate with a GitHub host."}
{"command": "gh browse", "description": "Open a GitHub repository in the browser or print the URL."}
{"command": "gh codespace", "description": "Connect and manage your codespaces in GitHub."}
{"command": "gh completion", "description": "Generate shell completion scripts for GitHub CLI commands."}
{"command": "gh config", "description": "Change configuration for GitHub cli."}
{"command": "gh cs", "description": "This command is an alias of gh codespace."}
{"command": "gh environment", "description": "Display help about environment variables for the GitHub CLI command."}
{"command": "gh extension", "description": "Manage extensions for the GitHub CLI."}
{"command": "gh formatting", "description": "Formatting options for JSON data exported from gh GitHub CLI command."}
{"command": "gh gist", "description": "Work with GitHub Gists."}
{"command": "gh help", "description": "Display help about the GitHub CLI command."}
{"command": "gh issue create", "description": "Create GitHub issues on a repository."}
{"command": "gh issue", "description": "Manage GitHub issues."}
{"command": "gh label", "description": "Work with GitHub labels."}
{"command": "gh mintty", "description": "Display help about MinTTY integration for the GitHub CLI command."}
{"command": "gh pr create", "description": "Manage GitHub pull requests."}
{"command": "gh pr merge", "description": "Merge GitHub pull requests."}
{"command": "gh pr", "description": "Manage GitHub pull requests.Some subcommands such as gh pr create have their own usage documentation."}
{"command": "gh reference", "description": "Display a reference about the GitHub CLI command."}
{"command": "gh release", "description": "Manage GitHub releases."}
{"command": "gh repo", "description": "Work with GitHub repositories."}
{"command": "gh run", "description": "View, run and watch recent GitHub Actions workflow runs."}
{"command": "gh screensaver", "description": "Extension for GitHub CLI that runs animated terminal screensavers.See also: gh extension."}
{"command": "gh secret set", "description": "Create or update GitHub secrets."}
{"command": "gh secret", "description": "Manage GitHub secrets."}
{"command": "gh ssh-key", "description": "Manage GitHub SSH keys."}
{"command": "gh workflow", "description": "List, view, and run GitHub Actions workflows."}
{"command": "gh", "description": "Work seamlessly with GitHub.Some subcommands such as gh config have their own usage documentation."}
{"command": "ghc", "description": "The Glasgow Haskell Compiler.Compiles and links Haskell source files."}
{"command": "ghci", "description": "The Glasgow Haskell Compiler's interactive environment."}
{"command": "ghcup", "description": "Haskell toolchain installer.Install, manage, and update Haskell toolchains."}
{"command": "ghdl", "description": "Open-source simulator for the VHDL language."}
{"command": "ghost", "description": "A blogging platform and headless CMS."}
{"command": "gibo", "description": "Fetch gitignore boilerplates."}
{"command": "gifdiff", "description": "Compare two GIFs for identical visual appearance.See also: gifsicle."}
{"command": "gifsicle", "description": "GIF manipulator."}
{"command": "gimp", "description": "GNU image manipulation program.See also: krita."}
{"command": "gist", "description": "Upload code to https://gist.github.com."}
{"command": "git abort", "description": "Abort an ongoing rebase, merge, or cherry-pick.Part of git-extras."}
{"command": "git add", "description": "Adds changed files to the index."}
{"command": "git alias", "description": "Create shortcuts for Git commands.Part of git-extras."}
{"command": "git am", "description": "Apply patch files and create a commit. Useful when receiving commits via email.See also git format-patch, which can generate patch files."}
{"command": "git annex", "description": "Manage files with Git, without checking their contents in.When a file is annexed, its content is moved into a key-value store, and a symlink is made that points to the content."}
{"command": "git annotate", "description": "Show commit hash and last author on each line of a file.See git blame, which is preferred over git annotate.git annotate is provided for those familiar with other version control systems."}
{"command": "git apply", "description": "Apply a patch to files and/or to the index without creating a commit.See also git am, which applies a patch and also creates a commit."}
{"command": "git archive-file", "description": "Export all the files of the current Git branch into a zip archive.Part of git-extras."}
{"command": "git archive", "description": "Create an archive of files from a named tree."}
{"command": "git authors", "description": "Generate a list of committers of a Git repository.Part of git-extras."}
{"command": "git bisect", "description": "Use binary search to find the commit that introduced a bug.Git automatically jumps back and forth in the commit graph to progressively narrow down the faulty commit."}
{"command": "git blame-someone-else", "description": "Blame someone else for your bad code."}
{"command": "git blame", "description": "Show commit hash and last author on each line of a file."}
{"command": "git branch", "description": "Main Git command for working with branches."}
{"command": "git browse-ci", "description": "Open the current git repository's CI website in the default web browser.Part of git-extras."}
{"command": "git browse", "description": "View an upstream repository in the default browser.Part of git-extras."}
{"command": "git brv", "description": "Print a list of branches, sorted by last commit date.Part of git-extras."}
{"command": "git bug", "description": "A distributed bug tracker that uses git's internal storage, so no files are added in your project.You may submit your problems to the same git remote you use to interact with others, much like commits and branches."}
{"command": "git bugreport", "description": "Captures debug information from the system and user, generating a text file to aid in the reporting of a bug in Git."}
{"command": "git bulk", "description": "Execute operations on multiple Git repositories.Part of git-extras."}
{"command": "git bundle", "description": "Package objects and references into an archive."}
{"command": "git cat-file", "description": "Provide content or type and size information for Git repository objects."}
{"command": "git changelog", "description": "Generate a changelog report from repository commits and tags.Part of git-extras."}
{"command": "git check-attr", "description": "For every pathname, list if each attribute is unspecified, set, or unset as a gitattribute on that pathname."}
{"command": "git check-ignore", "description": "Analyze and debug Git ignore/exclude (\".gitignore\") files."}
{"command": "git check-mailmap", "description": "Show canonical names and email addresses of contacts."}
{"command": "git check-ref-format", "description": "Check if a given refname is acceptable, and exit with a non-zero status if it is not."}
{"command": "git checkout-index", "description": "Copy files from the index to the working tree."}
{"command": "git checkout", "description": "Checkout a branch or paths to the working tree."}
{"command": "git cherry-pick", "description": "Apply the changes introduced by existing commits to the current branch.To apply changes to another branch, first use git checkout to switch to the desired branch."}
{"command": "git cherry", "description": "Find commits that have yet to be applied upstream."}
{"command": "git clean", "description": "Remove untracked files from the working tree."}
{"command": "git clear-soft", "description": "Clear a Git working directory as if it was freshly cloned with the current branch excluding files in .gitignore.Part of git-extras."}
{"command": "git clear", "description": "Clear a Git working directory as if it was freshly cloned with the current branch including files in .gitignore.Part of git-extras."}
{"command": "git clone", "description": "Clone an existing repository."}
{"command": "git coauthor", "description": "Add another author to the latest commit. Since this command rewrites the Git history, --force will be needed when pushing next time.Part of git-extras."}
{"command": "git cola", "description": "A powerful Git GUI with a slick and intuitive user interface."}
{"command": "git column", "description": "Display data in columns."}
{"command": "git commit-graph", "description": "Write and verify Git commit-graph files."}
{"command": "git commit-tree", "description": "Low level utility to create commit objects.See also: git commit."}
{"command": "git commit", "description": "Commit files to the repository."}
{"command": "git commits-since", "description": "Display commits since a specific time or date.Part of git-extras."}
{"command": "git config", "description": "Manage custom configuration options for Git repositories.These configurations can be local (for the current repository) or global (for the current user)."}
{"command": "git contrib", "description": "Display commits from a specific author.Part of git-extras."}
{"command": "git count-objects", "description": "Count the number of unpacked objects and their disk consumption."}
{"command": "git count", "description": "Print the total number of commits.Part of git-extras."}
{"command": "git cp", "description": "Copy an existing file to a new location, preserving history.Part of git-extras."}
{"command": "git create-branch", "description": "Create a Git branch in a repository.Part of git-extras."}
{"command": "git credential-cache", "description": "Git helper to temporarily store passwords in memory."}
{"command": "git credential-store", "description": "git helper to store passwords on disk."}
{"command": "git credential", "description": "Retrieve and store user credentials."}
{"command": "git cvsexportcommit", "description": "Export a single Git commit to a CVS checkout."}
{"command": "git daemon", "description": "A really simple server for Git repositories."}
{"command": "git delete-branch", "description": "Delete local and remote Git branches.Part of git-extras. If deleting the checked out branch, only the remote branch will be deleted."}
{"command": "git delete-merged-branches", "description": "Delete branches that are listed in git branch --merged excluding master.Part of git-extras."}
{"command": "git delete-submodule", "description": "Delete a specific submodule from a git repository.Part of git-extras."}
{"command": "git delete-tag", "description": "Delete existing local and remote tags.Part of git-extras."}
{"command": "git delta", "description": "List files that differ from another branch.Part of git-extras."}

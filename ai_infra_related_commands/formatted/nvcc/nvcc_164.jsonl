{"command": "nvcc --extra-device-vectorization", "description": "This option enables more aggressive device code vectorization.", "other": "Options for Steering GPU Code Generation"}
{"command": "nvcc --compile-as-tools-patch", "description": "Compile patch code for CUDA tools. Implies \u2013keep-device-functions.\nMay only be used in conjunction with --ptx or --cubin or --fatbin.\nShall not be used in conjunction with -rdc=true or -ewp.\nSome PTX ISA features may not be usable in this compilation mode.", "other": "Options for Steering GPU Code Generation"}
{"command": "nvcc --keep-device-functions", "description": "In whole program compilation mode, preserve user defined external linkage __device__ function definitions in generated PTX.", "other": "Options for Steering GPU Code Generation"}
{"command": "nvcc --jump-table-density percentage", "description": "Specify the case density percentage in switch statements, and use it as a minimal threshold to determine whether jump table(brx.idx instruction) will be used to implement a switch statement.\nThe percentage ranges from 0 to 101 inclusively.\nDefault\nThis option is set to 101 and nvcc disables jump table generation for switch statements.", "other": "Options for Steering GPU Code Generation"}
{"command": "nvcc --disable-warnings", "description": "Inhibit all warning messages.", "other": "Generic Tool Options"}
{"command": "nvcc --source-in-ptx", "description": "Interleave source in PTX.\nMay only be used in conjunction with --device-debug or --generate-line-info.", "other": "Generic Tool Options"}
{"command": "nvcc --restrict", "description": "Assert that all kernel pointer parameters are restrict pointers.", "other": "Generic Tool Options"}
{"command": "nvcc --Wno-deprecated-gpu-targets", "description": "Suppress warnings about deprecated GPU target architectures.", "other": "Generic Tool Options"}
{"command": "nvcc --Wno-deprecated-declarations", "description": "Suppress warning on use of a deprecated entity.", "other": "Generic Tool Options"}
{"command": "nvcc --Wreorder", "description": "Generate warnings when member initializers are reordered.", "other": "Generic Tool Options"}
{"command": "nvcc --Wdefault-stream-launch", "description": "Generate warning when an explicit stream argument is not provided in the <<<...>>> kernel launch syntax.", "other": "Generic Tool Options"}
{"command": "nvcc --Wmissing-launch-bounds", "description": "Generate warning when a __global__ function does not have an explicit __launch_bounds__ annotation.", "other": "Generic Tool Options"}
{"command": "nvcc --Wext-lambda-captures-this", "description": "Generate warning when an extended lambda implicitly captures this.", "other": "Generic Tool Options"}
{"command": "nvcc --Werror kind,...", "description": "Make warnings of the specified kinds into errors.\nThe following is the list of warning kinds accepted by this option:\nall-warnings\ncross-execution-space-call\nreorder\ndefault-stream-launch\nmissing-launch-bounds\next-lambda-captures-this\ndeprecated-declarations", "other": "Generic Tool Options"}
{"command": "nvcc --display-error-number", "description": "This option displays a diagnostic number for any message generated by the CUDA frontend compiler (note: not the host compiler).", "other": "Generic Tool Options"}
{"command": "nvcc --no-display-error-number", "description": "This option disables the display of a diagnostic number for any message generated by the CUDA frontend compiler (note: not the host compiler).", "other": "Generic Tool Options"}
{"command": "nvcc --diag-error errNum,...", "description": "Emit error for specified diagnostic message(s) generated by the CUDA frontend compiler (note: does not affect diagnostics generated by the host compiler/preprocessor).", "other": "Generic Tool Options"}
{"command": "nvcc --diag-suppress errNum,...", "description": "Suppress specified diagnostic message(s) generated by the CUDA frontend compiler (note: does not affect diagnostics generated by the host compiler/preprocessor).", "other": "Generic Tool Options"}
{"command": "nvcc --diag-warn errNum,...", "description": "Emit warning for specified diagnostic message(s) generated by the CUDA frontend compiler (note: does not affect diagnostics generated by the host compiler/preprocessor).", "other": "Generic Tool Options"}
{"command": "nvcc --resource-usage", "description": "Show resource usage such as registers and memory of the GPU code.\nThis option implies --nvlink-options=--verbose when --relocatable-device-code=true is set. Otherwise, it implies --ptxas-options=--verbose.", "other": "Generic Tool Options"}
{"command": "nvcc --help", "description": "Print help information on this tool.", "other": "Generic Tool Options"}
{"command": "nvcc --version", "description": "Print version information on this tool.", "other": "Generic Tool Options"}
{"command": "nvcc --options-file file,...", "description": "Include command line options from specified file.", "other": "Generic Tool Options"}
{"command": "nvcc --time filename", "description": "Generate a comma separated value table with the time taken by each compilation phase, and append it at the end of the file given as the option argument. If the file is empty, the column headings are generated in the first row of the table.\nIf the file name is -, the timing data is generated in stdout.", "other": "Generic Tool Options"}
{"command": "nvcc --qpp-config config", "description": "Specify the configuration ([[compiler/]version,][target]) when using q++ host compiler. The argument will be forwarded to the q++ compiler with its -V flag.", "other": "Generic Tool Options"}
{"command": "nvcc --list-gpu-code", "description": "List the gpu architectures (sm_XX) supported by the tool and exit.\nIf both \u2013list-gpu-code and \u2013list-gpu-arch are set, the list is displayed using the same format as the \u2013generate-code value.", "other": "Generic Tool Options"}
{"command": "nvcc --list-gpu-arch", "description": "List the virtual device architectures (compute_XX) supported by the tool and exit.\nIf both \u2013list-gpu-arch and \u2013list-gpu-code are set, the list is displayed using the same format as the \u2013generate-code value.", "other": "Generic Tool Options"}
{"command": "nvcc --allow-expensive-optimizations", "description": "Enable (disable) to allow compiler to perform expensive optimizations using maximum available resources (memory and compile-time).\nIf unspecified, default behavior is to enable this feature for optimization level >= O2.", "other": "Ptxas Options"}
{"command": "nvcc --compile-only", "description": "Generate relocatable object.", "other": "Ptxas Options"}
{"command": "nvcc --def-load-cache", "description": "Default cache modifier on global/generic load.\nDefault value: ca.", "other": "Ptxas Options"}
{"command": "nvcc --def-store-cache", "description": "Default cache modifier on global/generic store.", "other": "Ptxas Options"}
{"command": "nvcc --device-debug", "description": "Semantics same as nvcc option --device-debug.", "other": "Ptxas Options"}
{"command": "nvcc --disable-optimizer-constants", "description": "Disable use of optimizer constant bank.", "other": "Ptxas Options"}
{"command": "nvcc --entry entry,...", "description": "Semantics same as nvcc option --entries.", "other": "Ptxas Options"}
{"command": "nvcc --fmad", "description": "Semantics same as nvcc option --fmad.", "other": "Ptxas Options"}
{"command": "nvcc --force-load-cache", "description": "Force specified cache modifier on global/generic load.", "other": "Ptxas Options"}
{"command": "nvcc --force-store-cache", "description": "Force specified cache modifier on global/generic store.", "other": "Ptxas Options"}
{"command": "nvcc --generate-line-info", "description": "Semantics same as nvcc option --generate-line-info.", "other": "Ptxas Options"}
{"command": "nvcc --gpu-name gpuname", "description": "Specify name of NVIDIA GPU to generate code for.\nThis option also takes virtual compute architectures, in which case code generation is suppressed. This can be used for parsing only.\nAllowed values for this option: compute_50, compute_52, compute_53, compute_60, compute_61, compute_62, compute_70, compute_72, compute_75, compute_80, compute_86, compute_87, compute_89,compute_90,lto_50, lto_52, lto_53, lto_60, lto_61, lto_62, lto_70, lto_72, lto_75, lto_80, lto_86, lto_87, lto_89,lto_90, sm_50, sm_52, sm_53, sm_60, sm_61, sm_62, sm_70, sm_72, sm_75, sm_80, sm_86, sm_87, sm_89, sm_90\nDefault value: sm_52.", "other": "Ptxas Options"}
{"command": "nvcc --help", "description": "Semantics same as nvcc option --help.", "other": "Ptxas Options"}
{"command": "nvcc --machine", "description": "Semantics same as nvcc option --machine.", "other": "Ptxas Options"}
{"command": "nvcc --maxrregcount amount", "description": "Semantics same as nvcc option --maxrregcount.", "other": "Ptxas Options"}
{"command": "nvcc --opt-level N", "description": "Specify optimization level.\nDefault value: 3.", "other": "Ptxas Options"}
{"command": "nvcc --options-file file,...", "description": "Semantics same as nvcc option --options-file.", "other": "Ptxas Options"}
{"command": "nvcc --position-independent-code", "description": "Generate position-independent code.\nDefault value: false", "other": "Ptxas Options"}
{"command": "nvcc --preserve-relocs", "description": "This option will make ptxas to generate relocatable references for variables and preserve relocations generated for them in linked executable.", "other": "Ptxas Options"}
{"command": "nvcc --sp-bound-check", "description": "Generate stack-pointer bounds-checking code sequence.\nThis option is turned on automatically when --device-debug or --opt-level=0 is specified.", "other": "Ptxas Options"}
{"command": "nvcc --suppress-async-bulk-multicast-advisory-warning", "description": "Suppress the warning on use of .multicast::cluster modifier on cp.async.bulk{.tensor} instruction with sm_90.", "other": "Ptxas Options"}
{"command": "nvcc --verbose", "description": "Enable verbose mode which prints code generation statistics.", "other": "Ptxas Options"}
{"command": "nvcc --version", "description": "Semantics same as nvcc option --version.", "other": "Ptxas Options"}
{"command": "nvcc --warning-as-error", "description": "Make all warnings into errors.", "other": "Ptxas Options"}
{"command": "nvcc --warn-on-double-precision-use", "description": "Warning if double(s) are used in an instruction.", "other": "Ptxas Options"}
{"command": "nvcc --warn-on-local-memory-usage", "description": "Warning if local memory is used.", "other": "Ptxas Options"}
{"command": "nvcc --warn-on-spills", "description": "Warning if registers are spilled to local memory.", "other": "Ptxas Options"}
{"command": "nvcc --compile-as-tools-patch", "description": "Compile patch code for CUDA tools.\nShall not be used in conjunction with -Xptxas -c or -ewp.\nSome PTX ISA features may not be usable in this compilation mode.", "other": "Ptxas Options"}
{"command": "nvcc --maxntid", "description": "Specify the maximum number of threads that a thread block can have.\nThis option will be ignored if used along with -maxrregcount option. This option is also ignored\nfor entry functions that have .maxntid directive specified.", "other": "Ptxas Options"}
{"command": "nvcc --minnctapersm", "description": "Specify the minimum number of CTAs to be mapped to an SM.\nThis option will be ignored if used along with -maxrregcount option. This option is also ignored\nfor entry functions that have .minnctapersm directive specified.", "other": "Ptxas Options"}
{"command": "nvcc --disable-warnings", "description": "Inhibit all warning messages.", "other": "NVLINK Options"}
{"command": "nvcc --preserve-relocs", "description": "Preserve resolved relocations in linked executable.", "other": "NVLINK Options"}
{"command": "nvcc --verbose", "description": "Enable verbose mode which prints code generation statistics.", "other": "NVLINK Options"}
{"command": "nvcc --warning-as-error", "description": "Make all warnings into errors.", "other": "NVLINK Options"}
{"command": "nvcc --suppress-arch-warning", "description": "Suppress the warning that otherwise is printed when object does not contain code for target arch.", "other": "NVLINK Options"}
{"command": "nvcc --suppress-stack-size-warning", "description": "Suppress the warning that otherwise is printed when stack size cannot be determined.", "other": "NVLINK Options"}
{"command": "nvcc --dump-callgraph", "description": "Dump information about the callgraph and register usage.", "other": "NVLINK Options"}
